# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push only for the "main" branch
  pull_request:
    types: [closed]
    branches:
      - '2.x'
      - 'main'
      - '!releases/*'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    # Condition
    if: github.event.pull_request.merged == true 
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['14.x']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          # Should check out from base after merge
          ref: ${{ github.base_ref }}

      - run: git pull

      - name: Set up git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          git config advice.addIgnoredFile false
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - run: npm ci

      - name: Tag Version
        run: |
          if [ ${{ github.base_ref }} = main ]; then
            npm run new-version
          else
            npm run new-version -- prerelease
          fi

      - name: Get name & version from package.json
        shell: bash
        run: | 
          echo "##[set-output name=name;]$(node -p -e '`${require("./package.json").name}`')"
          echo "##[set-output name=version;]$(node -p -e '`${require("./lerna.json").version}`')"
        id: package_json

      - name: Set the value
        run: |
          echo "pkg_name=${{ steps.package_json.outputs.name }}" >> $GITHUB_ENV
          echo "pkg_version=${{ steps.package_json.outputs.version }}" >> $GITHUB_ENV

      # Pendding and get approval manually
      - uses: trstringer/manual-approval@v1
        if: ${{ github.base_ref == 'main' }}
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: andy-bin-cn,vern-crypto
          minimum-approvals: 1
          issue-title: "v${{ env.pkg_version }} Release approval"
      
      # Publish to npm registry
      - name: Publish to NPM
        run: |
          if [ ${{ github.base_ref }} = main ]; then
            npx lerna exec -- npm publish --access public
          else 
            npx lerna exec -- npm publish --dry-run
          fi
          
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_TOKEN }}

      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: v${{ env.pkg_version }}-${{ env.pkg_name }}.zip
          exclusions: '*.git* /*node_modules/* .editorconfig'
  
      - name: Push version file changes
        uses: ad-m/github-push-action@master
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          branch: 'release/${{ env.pkg_version }}'
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: v${{ env.pkg_version }}
          body_path: ./CHANGELOG.md
          files: |
            v${{ env.pkg_version }}-${{ env.pkg_name }}.zip
      
      - run: rm -rf v${{ env.pkg_version }}-${{ env.pkg_name }}.zip

      - name: Create Pull Request to Main
        if: ${{ github.base_ref == 'main' }}
        uses: peter-evans/create-pull-request@v4
        with:
          base: main
          branch: release/${{ env.pkg_version }}
      
      # Sync version back to develop
      - name: Create Pull Request to Develop
        uses: peter-evans/create-pull-request@v4
        with:
          base: '2.x'
          branch: release/${{ env.pkg_version }}
