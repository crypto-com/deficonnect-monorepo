"use strict";(self.webpackChunkdeficonnect_monorepo_docs=self.webpackChunkdeficonnect_monorepo_docs||[]).push([[652],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),o=n(6010);const a="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(7462),o=n(7294),a=n(6010),i=n(2389),l=n(7392),c=n(7094),s=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:i,values:d,groupId:m,className:f}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),g=(0,l.l)(v,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===i?i:i??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:w}=(0,c.U)(),[k,O]=(0,o.useState)(y),E=[],{blockElementScrollPositionUntilNextRender:N}=(0,s.o5)();if(null!=m){const e=h[m];null!=e&&e!==k&&v.some((t=>t.value===e))&&O(e)}const T=e=>{const t=e.currentTarget,n=E.indexOf(t),r=v[n].value;r!==k&&(N(t),O(r),null!=m&&w(m,String(r)))},I=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const n=E.indexOf(e.currentTarget)+1;t=E[n]??E[0];break}case"ArrowLeft":{const n=E.indexOf(e.currentTarget)-1;t=E[n]??E[E.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,a.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},f)},v.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>E.push(e),onKeyDown:I,onClick:T},i,{className:(0,a.Z)("tabs__item",p,i?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,o.cloneElement)(b.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,i.Z)();return o.createElement(d,(0,r.Z)({key:String(t)},e))}},2670:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905)),a=n(5488),i=n(5162);const l={title:"Migrating from v1 to v2",sidebar_position:8},c=void 0,s={unversionedId:"defi-wallet/web-sdk/migration",id:"defi-wallet/web-sdk/migration",title:"Migrating from v1 to v2",description:"Migration overview",source:"@site/docs/defi-wallet/web-sdk/migration.md",sourceDirName:"defi-wallet/web-sdk",slug:"/defi-wallet/web-sdk/migration",permalink:"/deficonnect-monorepo/docs/defi-wallet/web-sdk/migration",draft:!1,editUrl:"https://github.com/crypto-com/deficonnect-monorepo/tree/develop/docs/docs/defi-wallet/web-sdk/migration.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Migrating from v1 to v2",sidebar_position:8},sidebar:"defiWalletSidebar",previous:{title:"RPC API",permalink:"/deficonnect-monorepo/docs/defi-wallet/web-sdk/rpc-api"},next:{title:"Integrate Examples",permalink:"/deficonnect-monorepo/docs/category/integrate-examples"}},u={},p=[{value:"Migration overview",id:"migration-overview",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"migration-overview"},"Migration overview"),(0,o.kt)("p",null,"it is very easy to upgrade to V2 version.\nno code change. only need change to import ",(0,o.kt)("inlineCode",{parentName:"p"},"@deficonnect/web3-connector")," package"),(0,o.kt)(a.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"v2",label:"v2",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1} showLineNumbers","{1}":!0,showLineNumbers:!0},'import { DeFiWeb3Connector } from "@deficonnect/web3-connector";\n\nconst connector = new DeFiWeb3Connector({\n  supportedChainIds: [1],\n  appName: "your app name", // optional\n  chainType: "eth", // only support \'eth\' for DeFiWeb3Connector\n  chainId: "25", // for eth is 1\n  rpcUrls: {\n    1: "https://mainnet.infura.io/v3/INFURA_API_KEY",\n    25: "https://evm-cronos.crypto.org/",\n  },\n});\nconnector.activate();\n'))),(0,o.kt)(i.Z,{value:"v1",label:"v1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1} showLineNumbers","{1}":!0,showLineNumbers:!0},'import { DeFiWeb3Connector } from "deficonnect";\n\nconst connector = new DeFiWeb3Connector({\n  supportedChainIds: [1],\n  rpc: { 1: "https://mainnet.infura.io/v3/INFURA_API_KEY" },\n  pollingInterval: 15000,\n});\nconnector.activate();\n')))))}m.isMDXComponent=!0}}]);