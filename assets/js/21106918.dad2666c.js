"use strict";(self.webpackChunkdeficonnect_monorepo_docs=self.webpackChunkdeficonnect_monorepo_docs||[]).push([[4491],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(b,c(c({ref:t},d),{},{components:n})):a.createElement(b,c({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:r,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function c(e){let{children:t,hidden:n,className:c}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,c),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),o=n(6010),c=n(2389),l=n(7392),i=n(7094),s=n(2466);const d="tabList__CuJ",p="tabItem_LNqP";function u(e){const{lazy:t,block:n,defaultValue:c,values:u,groupId:m,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),w=u??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,l.l)(w,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===c?c:c??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==v&&!w.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${w.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:y}=(0,i.U)(),[k,I]=(0,r.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=m){const e=g[m];null!=e&&e!==k&&w.some((t=>t.value===e))&&I(e)}const j=e=>{const t=e.currentTarget,n=N.indexOf(t),a=w[n].value;a!==k&&(x(t),I(a),null!=m&&y(m,String(a)))},E=e=>{let t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},b)},w.map((e=>{let{value:t,label:n,attributes:c}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>N.push(e),onKeyDown:E,onClick:j},c,{className:(0,o.Z)("tabs__item",p,c?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,c.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},9931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(5488),c=n(5162);const l={title:"Integrating with Web3React",sidebar_position:3},i="Integrating with Web3-React",s={unversionedId:"defi-wallet/integrate-examples/web3react",id:"defi-wallet/integrate-examples/web3react",title:"Integrating with Web3React",description:"Step 1: Install ethers and web3-react",source:"@site/docs/defi-wallet/integrate-examples/web3react.md",sourceDirName:"defi-wallet/integrate-examples",slug:"/defi-wallet/integrate-examples/web3react",permalink:"/deficonnect-monorepo/docs/defi-wallet/integrate-examples/web3react",draft:!1,editUrl:"https://github.com/crypto-com/deficonnect-monorepo/tree/develop/docs/defi-wallet/integrate-examples/web3react.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Integrating with Web3React",sidebar_position:3},sidebar:"defiWalletSidebar",previous:{title:"Integrating with Web3Model",permalink:"/deficonnect-monorepo/docs/defi-wallet/integrate-examples/web3model"}},d={},p=[{value:"Step 1: Install ethers and web3-react",id:"step-1-install-ethers-and-web3-react",level:2},{value:"Step 2: Import and Setup Web3ReactProvider",id:"step-2-import-and-setup-web3reactprovider",level:2},{value:"Step 3: Import and Instantiate Wallet Connectors",id:"step-3-import-and-instantiate-wallet-connectors",level:2},{value:"Connect and Disconnect from Wallet",id:"connect-and-disconnect-from-wallet",level:2},{value:"Access connection, account, network information",id:"access-connection-account-network-information",level:2},{value:"Switch Networks or Add Custom Networks",id:"switch-networks-or-add-custom-networks",level:2}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"integrating-with-web3-react"},"Integrating with Web3-React"),(0,r.kt)("h2",{id:"step-1-install-ethers-and-web3-react"},"Step 1: Install ethers and web3-react"),(0,r.kt)("p",null,"Install ethers.js as a required dependency for web3-react. If you are building your dapp with web3.js, you can additionally install the library."),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install ethers\nnpm install web3 # optional\n\nnpm install @web3-react/core\n"))),(0,r.kt)(c.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add ethers\nyarn add web3 # optional\n\nyarn add @web3-react/core\n")))),(0,r.kt)("h2",{id:"step-2-import-and-setup-web3reactprovider"},"Step 2: Import and Setup Web3ReactProvider"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Web3ReactProvider } from "@web3-react/core";\nimport { Web3Provider } from "@ethersproject/providers";\n\nfunction getLibrary(provider) {\n  return new Web3Provider(provider);\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById("root")\n);\n')),(0,r.kt)("h2",{id:"step-3-import-and-instantiate-wallet-connectors"},"Step 3: Import and Instantiate Wallet Connectors"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-base"},"npm install @deficonnect/web3-connector\nnpm install @web3-react/injected-connector # Injected (e.g. Metamask)\n"))),(0,r.kt)(c.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-base"},"yarn add @deficonnect/web3-connector\nyarn add @web3-react/injected-connector # Injected (e.g. Metamask)\n")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { DeFiWeb3Connector } from "@deficonnect/web3-connector";\nimport { InjectedConnector } from "@web3-react/injected-connector";\n\nconst DeFiWallet = new DeFiWeb3Connector({\n  supportedChainIds: [1],\n  chainType: "eth", // only support \'eth\' for DeFiWeb3Connector\n  chainId: "25",\n  rpcUrls: {\n    1: "https://mainnet.infura.io/v3/INFURA_API_KEY",\n    25: "https://evm-cronos.crypto.org/",\n  },\n});\n\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 25, 42],\n});\n')),(0,r.kt)("h2",{id:"connect-and-disconnect-from-wallet"},"Connect and Disconnect from Wallet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useWeb3React } from "@web3-react/core";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n\n  const { activate, deactivate } = useWeb3React();\n    ...\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<button onClick={() => { activate(DeFiWallet) }}>DeFi Wallet</button>\n<button onClick={() => { activate(Injected) }}>Metamask</button>\n\n<button onClick={deactivate}>Disconnect</button>\n")),(0,r.kt)("h2",{id:"access-connection-account-network-information"},"Access connection, account, network information"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"/*\n  active: boolean indicating connection to user\u2019s wallet\n  account: connected user's public wallet address\n  chainId: chain id of the currently connected network\n*/\n\nfunction App() {\n\n  # add this line\n  const { active, chainId, account } = useWeb3React();\n  ...\n\n    return (\n    ...\n\n    # add these 3 lines\n    <div>Connection Status: {active}</div>\n    <div>{Account: {account}</div>\n    <div>{Network ID: {chainId}</div>\n    ...\n\n  );\n}\n")),(0,r.kt)("h2",{id:"switch-networks-or-add-custom-networks"},"Switch Networks or Add Custom Networks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const { library } = useWeb3React();\n\n// example of switching or adding network with Harmony Mainnet\nconst switchNetwork = async () => {\n  try {\n    await library.provider.request({\n      method: "wallet_switchEthereumChain",\n      params: [{ chainId: "0x63564c40" }],\n    });\n  } catch (switchError) {\n    // 4902 error code indicates the chain is missing on the wallet\n    if (switchError.code === 4902) {\n      try {\n        await library.provider.request({\n          method: "wallet_addEthereumChain",\n          params: [\n            {\n              chainId: "0x63564c40",\n              rpcUrls: ["https://api.harmony.one"],\n              chainName: "Harmony Mainnet",\n              nativeCurrency: { name: "ONE", decimals: 18, symbol: "ONE" },\n              blockExplorerUrls: ["https://explorer.harmony.one"],\n              iconUrls: [\n                "https://harmonynews.one/wp-content/uploads/2019/11/slfdjs.png",\n              ],\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n')))}m.isMDXComponent=!0}}]);