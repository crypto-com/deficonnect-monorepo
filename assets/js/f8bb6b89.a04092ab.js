"use strict";(self.webpackChunkdeficonnect_monorepo_docs=self.webpackChunkdeficonnect_monorepo_docs||[]).push([[8666],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(n),u=o,m=p["".concat(s,".").concat(u)]||p[u]||f[u]||a;return n?r.createElement(m,c(c({ref:t},d),{},{components:n})):r.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Send Transaction & RPC Called",sidebar_position:5},c="Send Transaction",i={unversionedId:"defi-wallet/web-sdk/send-transaction",id:"defi-wallet/web-sdk/send-transaction",title:"Send Transaction & RPC Called",description:"transaction rpc method called guide(all of the rpc methods called same this):",source:"@site/docs/defi-wallet/web-sdk/send-transaction.md",sourceDirName:"defi-wallet/web-sdk",slug:"/defi-wallet/web-sdk/send-transaction",permalink:"/deficonnect-monorepo/docs/defi-wallet/web-sdk/send-transaction",draft:!1,editUrl:"https://github.com/crypto-com/deficonnect-monorepo/tree/develop/docs/defi-wallet/web-sdk/send-transaction.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Send Transaction & RPC Called",sidebar_position:5},sidebar:"defiWalletSidebar",previous:{title:"Connect",permalink:"/deficonnect-monorepo/docs/defi-wallet/web-sdk/connect"},next:{title:"RPC API",permalink:"/deficonnect-monorepo/docs/defi-wallet/web-sdk/rpc-api"}},s={},l=[],d={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"send-transaction"},"Send Transaction"),(0,o.kt)("p",null,"transaction rpc method called guide(all of the rpc methods called same this):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'async function sendTransaction() {\n  const provider = await connector.getProvider();\n\n  provider.request({\n    method: "eth_sendTransaction",\n    params: [\n      {\n        /* your transaction params */\n      },\n    ],\n  });\n}\n')))}p.isMDXComponent=!0}}]);